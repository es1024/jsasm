{"version":3,"sources":["webpack:///webpack/bootstrap 11cf7fc7f74059c743b7","webpack:///./src/address.ts","webpack:///./src/error/sigbase.ts","webpack:///./src/index.ts","webpack:///./src/error/sigill.ts","webpack:///./src/error/sigsegv.ts","webpack:///./src/memory.ts","webpack:///./src/x86.ts"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 11cf7fc7f74059c743b7","const MIN_ADDR = 0;\nconst MAX_ADDR = 0x7FFFFFFF | 0;\n\nexport const TEXT_MASK = 0x10000000;\nexport const STACK_MASK = 0x40000000;\nexport const OFFSET_MASK = 0x0FFFFFFF;\n\nexport function isAddress(addr: number): boolean {\n  return addr === +addr && addr == (addr | 0) && MIN_ADDR <= addr &&\n      addr <= MAX_ADDR;\n}\n\n// 0001... = text, assumes addr is an address (31 bit number)\nexport function isTextAddress(addr: number): boolean {\n  return isAddress(addr) && (addr & TEXT_MASK) !== 0;\n}\n\n// 01..... = stack, assumes addr is an address (31 bit number)\nexport function isStackAddress(addr: number): boolean {\n  return (addr & STACK_MASK) !== 0;\n}\n\n// assumes addr is an address (31 bit number)\nexport function getAddressOffset(addr: number): number {\n  return (addr & OFFSET_MASK);\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/address.ts","export default class SIGBASE extends Error {\n  constructor(m: string) {\n    super(m);\n    Object.setPrototypeOf(this, SIGBASE.prototype);\n  }\n\n  sigtype(): string {\n    return 'SIGBASE (this should not happen)';\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/error/sigbase.ts","import {TEXT_MASK} from './address';\nimport MemoryManager from './memory';\nimport SIGBASE from './error/sigbase';\nimport X86, {X86Flag} from './x86';\n\nlet mem: MemoryManager = null;\nlet x86Machine: X86 = null;\n\nfunction toHex(val: number, minlen: number): string {\n  if (val < 0) {\n    val = 0xFFFFFFFF + val + 1;\n  }\n  const tmp = '00000000' + val.toString(16).toUpperCase();\n  return tmp.substring(tmp.length - minlen);\n}\n\nfunction syncRegs(): void {\n  const regs = x86Machine.getRegisters();\n  (<any> document).getElementById('reg-eax').value = toHex(regs.eax, 8);\n  (<any> document).getElementById('reg-ecx').value = toHex(regs.ecx, 8);\n  (<any> document).getElementById('reg-edx').value = toHex(regs.edx, 8);\n  (<any> document).getElementById('reg-ebx').value = toHex(regs.ebx, 8);\n  (<any> document).getElementById('reg-esi').value = toHex(regs.esi, 8);\n  (<any> document).getElementById('reg-edi').value = toHex(regs.edi, 8);\n  (<any> document).getElementById('reg-ebp').value = toHex(regs.ebp, 8);\n  (<any> document).getElementById('reg-esp').value = toHex(regs.esp, 8);\n  (<any> document).getElementById('reg-eip').value = toHex(regs.eip, 8);\n  (<any> document).getElementById('reg-eflags').value = toHex(regs.eflags, 8);\n  (<any> document).getElementById('reg-es').value = toHex(regs.es, 4);\n  (<any> document).getElementById('reg-cs').value = toHex(regs.cs, 4);\n  (<any> document).getElementById('reg-ss').value = toHex(regs.ss, 4);\n  (<any> document).getElementById('reg-ds').value = toHex(regs.ds, 4);\n  (<any> document).getElementById('reg-fs').value = toHex(regs.fs, 4);\n  (<any> document).getElementById('reg-gs').value = toHex(regs.gs, 4);\n}\n\nfunction syncFlags(): void {\n  (<any> document).getElementById('flg-cf').checked = x86Machine.getFlag(X86Flag.CF);\n  (<any> document).getElementById('flg-pf').checked = x86Machine.getFlag(X86Flag.PF);\n  (<any> document).getElementById('flg-af').checked = x86Machine.getFlag(X86Flag.AF);\n  (<any> document).getElementById('flg-zf').checked = x86Machine.getFlag(X86Flag.ZF);\n  (<any> document).getElementById('flg-sf').checked = x86Machine.getFlag(X86Flag.SF);\n  (<any> document).getElementById('flg-tf').checked = x86Machine.getFlag(X86Flag.TF);\n  (<any> document).getElementById('flg-if').checked = x86Machine.getFlag(X86Flag.IF);\n  (<any> document).getElementById('flg-df').checked = x86Machine.getFlag(X86Flag.DF);\n  (<any> document).getElementById('flg-of').checked = x86Machine.getFlag(X86Flag.OF);\n}\n\nfunction init(src: string): void {\n  mem = new MemoryManager({\n    textLength: 65536,\n    stackLength: 65536,\n  });\n\n  src = src.toUpperCase().replace(/[^\\dA-F]/g, '');\n  const words = src.match(/.{1,8}/g);\n  for (let i = 0; i < words.length; ++i) {\n    const tmp = words[i].match(/.{1,2}/g);\n    tmp.reverse();\n    mem.writeWord(TEXT_MASK | (i << 2), parseInt(tmp.join(''), 16));\n  }\n\n  x86Machine = new X86(mem, {\n    eax: 0,\n    ecx: 0,\n    edx: 0,\n    ebx: 0,\n    esi: 0,\n    edi: 0,\n    ebp: 0,\n    esp: mem.getStackTopAddr(),\n    eip: mem.getTextBaseAddr(),\n    // lots of \"always 1\" flags\n    eflags: (1 << 1) | (1 << 12) | (1 << 13) | (1 << 14) | (1 << 15),\n    es: 0,\n    cs: 0,\n    ss: 0,\n    ds: 0,\n    fs: 0,\n    gs: 0,\n  });\n}\n\nfunction run(): void {\n  (<any> document).getElementById('x86-error').innerHTML = 'unimplemented';\n}\n\nfunction step(): void {\n  if (x86Machine == null) {\n    init((<any> document).getElementById('x86-src').value);\n  }\n  try {\n    x86Machine.step();\n  } catch (e) {\n    if (e instanceof SIGBASE) {\n      (<any> document).getElementById('x86-error').innerHTML = \n          (<SIGBASE> e).sigtype() + ': ' + e.message;\n      return;\n    } else {\n      (<any> document).getElementById('x86-error').innerHTML = 'Unknown error';\n      throw e;\n    }\n  }\n  syncRegs();\n  syncFlags();\n}\n\nfunction stop(): void {\n  (<any> document).getElementById('x86-error').innerHTML = 'unimplemented';\n}\n\nfunction reset(): void {\n  x86Machine = null;\n  init((<any> document).getElementById('x86-src').value);\n  syncRegs();\n  syncFlags();\n  x86Machine = null;\n  (<any> document).getElementById('x86-error').innerHTML = '';\n}\n\n(<any> window).run = run;\n(<any> window).step = step;\n(<any> window).stop = stop;\n(<any> window).reset = reset;\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","import SIGBASE from './sigbase';\n\nexport default class SIGILL extends SIGBASE {\n  constructor(m: string) {\n    super(m);\n    Object.setPrototypeOf(this, SIGILL.prototype);\n  }\n\n  sigtype(): string {\n    return 'SIGILL';\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/error/sigill.ts","import SIGBASE from './sigbase';\n\nexport default class SIGSEGV extends SIGBASE {\n  constructor(m: string) {\n    super(m);\n    Object.setPrototypeOf(this, SIGSEGV.prototype);\n  }\n\n  sigtype(): string {\n    return 'SIGSEGV';\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/error/sigsegv.ts","import {getAddressOffset, isTextAddress, isStackAddress} from './address';\nimport {TEXT_MASK, STACK_MASK} from './address';\nimport SIGSEGV from './error/sigsegv';\n\ninterface SegmentLength {\n  textLength: number;\n  stackLength: number;\n}\n\nexport default class MemoryManager {\n  private text: Uint32Array;\n  private stack: Uint32Array;\n\n  constructor(sl: SegmentLength) {\n    this.text = new Uint32Array(sl.textLength >> 2);\n    this.stack = new Uint32Array(sl.stackLength >> 2);\n  }\n\n  getTextBaseAddr(): number {\n    return TEXT_MASK;\n  }\n\n  getTextTopAddr(): number {\n    return TEXT_MASK | (this.text.length << 2);\n  }\n\n  getStackBaseAddr(): number {\n    return STACK_MASK;\n  }\n\n  getStackTopAddr(): number {\n    return STACK_MASK | (this.stack.length << 2);\n  }\n\n  readWord(addr: number): number {\n    let offset = getAddressOffset(addr);\n    if ((offset & 0x3) != 0) {\n      throw new SIGSEGV('malaligned address');\n    }\n    offset >>= 2;\n    if (isTextAddress(addr)) {\n      if (offset >= this.text.length) {\n        throw new SIGSEGV('text segment address out of bounds');\n      }\n      return this.text[offset];\n    } else if (isStackAddress(addr)) {\n      if (offset >= this.stack.length) {\n        throw new SIGSEGV('stack segment address out of bounds');\n      }\n      return this.stack[offset];\n    }\n    throw new SIGSEGV('bad address');\n  }\n\n  writeWord(addr: number, value: number): void {\n    let offset = getAddressOffset(addr);\n    if ((offset & 0x3) != 0) {\n      throw new SIGSEGV('malaligned address');\n    }\n    offset >>= 2;\n    if (isTextAddress(addr)) {\n      if (offset >= this.text.length) {\n        throw new SIGSEGV('text segment address out of bounds');\n      }\n      this.text[offset] = value;\n    } else if (isStackAddress(addr)) {\n      if (offset >= this.stack.length) {\n        throw new SIGSEGV('stack segment address out of bounds');\n      }\n      this.stack[offset] = value;\n    } else {\n      throw new SIGSEGV('bad address');\n    }\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/memory.ts","import MemoryManager from './memory';\nimport SIGILL from './error/sigill';\n\nexport interface X86Registers {\n  eax: number;\n  ecx: number;\n  edx: number;\n  ebx: number;\n  esp: number;\n  ebp: number;\n  esi: number;\n  edi: number;\n  eip: number;\n  eflags: number;\n  es: number;\n  cs: number;\n  ss: number;\n  ds: number;\n  fs: number;\n  gs: number;\n}\n\nexport const enum X86Flag {\n  CF = 0,\n  PF = 2,\n  AF = 4,\n  ZF = 6,\n  SF = 7,\n  TF = 8,\n  IF = 9,\n  DF = 10,\n  OF = 11,\n}\n\nconst enum X86Reg {\n  EAX = 0,\n  ECX = 1,\n  EDX = 2,\n  EBX = 3,\n  ESP = 4,\n  EBP = 5,\n  ESI = 6,\n  EDI = 7,\n  EIP = 8,\n  EFLAGS = 9,\n}\n\nconst enum X86SReg {\n  ES = 0,\n  CS = 1,\n  SS = 2,\n  DS = 3,\n  FS = 4,\n  GS = 5,\n}\n\nconst ARITH_FLAG_CLEAR = ~((1 << <number>X86Flag.OF) | (1 << <number>X86Flag.SF) |\n    (1 << <number>X86Flag.ZF) | (1 << <number>X86Flag.AF) |\n    (1 << <number>X86Flag.PF) | (1 << <number>X86Flag.CF));\n\nexport default class X86 {\n  private regs: Uint32Array;\n  private sregs: Uint16Array;\n  private mem: MemoryManager;\n\n  constructor(mem: MemoryManager, regs: X86Registers) {\n    this.mem = mem;\n    this.regs = new Uint32Array(10);\n    this.regs[<number> X86Reg.EAX] = regs.eax;\n    this.regs[<number> X86Reg.ECX] = regs.ecx;\n    this.regs[<number> X86Reg.EDX] = regs.edx;\n    this.regs[<number> X86Reg.EBX] = regs.ebx;\n    this.regs[<number> X86Reg.ESP] = regs.esp;\n    this.regs[<number> X86Reg.EBP] = regs.ebp;\n    this.regs[<number> X86Reg.ESI] = regs.esi;\n    this.regs[<number> X86Reg.EDI] = regs.edi;\n    this.regs[<number> X86Reg.EIP] = regs.eip;\n    this.regs[<number> X86Reg.EFLAGS] = regs.eflags;\n    this.sregs = new Uint16Array(6);\n    this.sregs[<number> X86SReg.ES] = regs.es;\n    this.sregs[<number> X86SReg.CS] = regs.cs;\n    this.sregs[<number> X86SReg.SS] = regs.ss;\n    this.sregs[<number> X86SReg.DS] = regs.ds;\n    this.sregs[<number> X86SReg.FS] = regs.fs;\n    this.sregs[<number> X86SReg.GS] = regs.gs;\n\n    this.add = this.add.bind(this);\n    this.or = this.or.bind(this);\n    this.adc = this.adc.bind(this);\n    this.sbb = this.sbb.bind(this);\n    this.and = this.and.bind(this);\n    this.sub = this.sub.bind(this);\n    this.xor = this.xor.bind(this);\n    this.pushpop = this.pushpop.bind(this);\n  }\n\n  getRegisters(): X86Registers {\n    return {\n      eax: this.regs[<number> X86Reg.EAX],\n      ecx: this.regs[<number> X86Reg.ECX],\n      edx: this.regs[<number> X86Reg.EDX],\n      ebx: this.regs[<number> X86Reg.EBX],\n      esp: this.regs[<number> X86Reg.ESP],\n      ebp: this.regs[<number> X86Reg.EBP],\n      esi: this.regs[<number> X86Reg.ESI],\n      edi: this.regs[<number> X86Reg.EDI],\n      eip: this.regs[<number> X86Reg.EIP],\n      eflags: this.regs[<number> X86Reg.EFLAGS],\n      es: this.sregs[<number> X86SReg.ES],\n      cs: this.sregs[<number> X86SReg.CS],\n      ss: this.sregs[<number> X86SReg.SS],\n      ds: this.sregs[<number> X86SReg.DS],\n      fs: this.sregs[<number> X86SReg.FS],\n      gs: this.sregs[<number> X86SReg.GS],\n    };\n  }\n\n  setFlag(flag: X86Flag, value: boolean): void {\n    if (value) {\n      this.regs[<number> X86Reg.EFLAGS] |= (1 << <number>flag);\n    } else {\n      this.regs[<number> X86Reg.EFLAGS] &= ~(1 << <number>flag);\n    }\n  }\n\n  getFlag(flag: X86Flag): boolean {\n    return (this.regs[<number> X86Reg.EFLAGS] & (1 << <number>flag)) !== 0;\n  }\n\n  step(): void {\n    const op = this.nextInstByte();\n    const d = !!(op & 0x02);\n    const w = !!(op & 0x01);\n    let tmp: number;\n    switch (op >> 2) {\n      case 0: this.processModRegRM(d, w, true, this.add); break;\n      case 1:\n        if (!d) {\n          this.processImm(w, 0, true, this.add);\n        } else {\n          this.sregs[X86SReg.ES] = this.pushpop(this.sregs[X86SReg.ES], 0, w);\n        }\n      break;\n      case 2: this.processModRegRM(d, w, true, this.or); break;\n      case 3:\n        if (!d) {\n          this.processImm(w, 0, true, this.or);\n        } else if (!w) {\n          this.pushpop(this.sregs[X86SReg.CS], 0, false);\n        } else {\n          throw new SIGILL('multibyte ops not implemented');\n        }\n      break;\n      case 4: this.processModRegRM(d, w, true, this.adc); break;\n      case 5:\n        if (!d) {\n          this.processImm(w, 0, true, this.adc);\n        } else {\n          this.sregs[X86SReg.SS] = this.pushpop(this.sregs[X86SReg.SS], 0, w);\n        }\n      break;\n      case 6: this.processModRegRM(d, w, true, this.sbb); break;\n      case 7:\n        if (!d) {\n          this.processImm(w, 0, true, this.sbb);\n        } else {\n          this.sregs[X86SReg.DS] = this.pushpop(this.sregs[X86SReg.DS], 0, w);\n        }\n      break;\n      case 8: this.processModRegRM(d, w, true, this.and); break;\n      case 9:\n        if (!d) {\n          this.processImm(w, 0, true, this.and);\n        } else {\n          throw new SIGILL('unimplemented');\n        }\n      break;\n      case 10: this.processModRegRM(d, w, true, this.sub); break;\n      case 11:\n        if (!d) {\n          this.processImm(w, 0, true, this.sub);\n        } else {\n          throw new SIGILL('unimplemented');\n        }\n      break;\n      case 12: this.processModRegRM(d, w, true, this.xor); break;\n      case 13:\n        if (!d) {\n          this.processImm(w, 0, true, this.xor);\n        } else {\n          throw new SIGILL('unimplemented');\n        }\n      break;\n      case 14: this.processModRegRM(d, w, false, this.sub); break;\n      case 15:\n        if (!d) {\n          this.processImm(w, 0, false, this.sub);\n        } else {\n          throw new SIGILL('unimplemented');\n        }\n      break;\n      case 16:\n      case 17:\n        tmp = this.regs[<number> X86Reg.EFLAGS] & (1 << <number> X86Flag.CF);\n        this.regs[op & 0x7] = this.add(this.regs[op & 0x7], 1, true);\n        this.regs[<number> X86Reg.EFLAGS] |= tmp;\n      break;\n      case 18:\n      case 19:\n        tmp = this.regs[<number> X86Reg.EFLAGS] & (1 << <number> X86Flag.CF);\n        this.regs[op & 0x7] = this.sub(this.regs[op & 0x7], 1, true);\n        this.regs[<number> X86Reg.EFLAGS] |= tmp;\n      break;\n      case 20:\n      case 21:\n      case 22:\n      case 23:\n        this.regs[op & 0x7] = this.pushpop(this.regs[op & 0x7], 0, op >= 0x58);\n      break;\n      default:\n        throw new SIGILL('probably just unimplemented or something');\n    }\n  }\n\n  private nextInstByte(): number {\n    const tw = this.mem.readWord(this.regs[<number> X86Reg.EIP] & ~0x3);\n    const offs = this.regs[<number> X86Reg.EIP] & 0x3;\n    const op = (tw >> (offs << 3)) & 0xFF;\n    ++this.regs[<number> X86Reg.EIP];\n\n    return op;\n  }\n\n  private processModRegRM(d: boolean, w: boolean, k: boolean,\n      f: (a: number, b: number, w: boolean) => number): void {\n    const modRM = this.nextInstByte();\n    const mod = modRM >> 6;\n    let reg = (modRM >> 3) & 0x7;\n    let RM = modRM & 0x7;\n    let offset = 0;\n    let scale = 1;\n    let index = 0;\n    let base = RM;\n    let addr = 0;\n    if (mod < 3 && RM == 5) {\n      const SIB = this.nextInstByte();\n      scale = SIB >> 6;\n      index = (SIB >> 3) & 0x7;\n      base = SIB & 0x7;\n      if (base == 5) {\n        throw new SIGILL('SIB base=5');\n      }\n    }\n    switch (mod) {\n      case 2:\n        offset |= this.nextInstByte();\n        offset |= this.nextInstByte() << 8;\n        offset |= this.nextInstByte() << 16;\n      case 1:\n        offset |= this.nextInstByte() << 24;\n        if (mod == 1) {\n          offset >>= 24;\n        }\n      case 0:\n        if (base == 6 && mod == 0) {\n          addr |= this.nextInstByte();\n          addr |= this.nextInstByte() << 8;\n          addr |= this.nextInstByte() << 16;\n          addr |= this.nextInstByte() << 24;\n        } else {\n          addr = this.regs[base] + offset;\n        }\n        if (RM == 5) {\n          addr += index << scale;\n        }\n        addr &= 0xFFFFFFFF;\n\n        let memVal = 0;\n        let memA = 0, memB = 0, maskTop = 0, maskBottom = 0, cTop = 0, cBottom = 0;\n        if ((addr & 0x3) == 0) {\n          memVal = this.mem.readWord(addr);\n        } else {\n          cTop = ((~addr) & 0x3) << 3;\n          cBottom = (addr & 0x3) << 3;\n          maskBottom = (1 << cBottom) - 1;\n          maskTop = ~maskBottom;\n          memA = this.mem.readWord(addr & ~0x3);\n          memB = this.mem.readWord((addr & ~0x3) + 4);\n          memVal = memB & maskBottom;\n          memVal <<= cTop;\n          memVal &= memA >> cBottom;\n        }\n\n        if (d) {\n          const v = f(this.regs[reg], memVal, w);\n          if (k) {\n            this.regs[reg] = v;\n          }\n        } else {\n          const v = f(memVal, this.regs[reg], w);\n          if (k) {\n            if ((addr & 0x3) == 0) {\n              this.mem.writeWord(addr, v);\n            } else {\n              memA &= maskBottom;\n              memB &= maskTop;\n              memA |= (v & ((1 << cTop) - 1)) << cBottom;\n              memB |= (v & ~((1 << cTop) - 1));\n              this.mem.writeWord(addr & ~0x3, memA);\n              this.mem.writeWord((addr & ~0x3) + 4, memB);\n            }\n          }\n        }\n      break;\n      case 3:\n        if (d) {\n          const tmp = reg;\n          reg = RM;\n          RM = tmp;\n        }\n        if (w) {\n          const v = f(this.regs[RM], this.regs[reg], w);\n          if (k) {\n            this.regs[RM] = v;\n          }\n        } else {\n          const RMr = RM & 0x3;\n          const regr = reg & 0x3;\n          const RMs = RM & 0x4;\n          const regs = reg & 0x4;\n          const tmp = f((this.regs[RMr] & (0xFF << RMs)) >> RMs,\n              (this.regs[regr] & (0xFF << regs)) >> regs, w);\n          if (k) {\n            this.regs[RMr] = (this.regs[RMr] & ~(0xFF << RMs)) | tmp << RMs;\n          }\n        }\n      break;\n    }\n  }\n\n  private processImm(w: boolean, reg: number, k: boolean,\n      f: (a: number, b: number, w: boolean) => number): void {\n    if (w) {\n      let imm = this.nextInstByte();\n      imm |= this.nextInstByte() << 8;\n      imm |= this.nextInstByte() << 16;\n      imm |= this.nextInstByte() << 24;\n      let v = f(this.regs[reg], imm, w);\n      if (k) {\n        this.regs[reg] = v;\n      }\n    } else {\n      const imm = this.nextInstByte();\n      const regr = reg & 0x3;\n      const regs = reg & 0x4;\n      const tmp = f((this.regs[regr] & (0xFF << regs)) >> regs, imm, w);\n      if (k) {\n        this.regs[regr] = (this.regs[regr] & ~(0xFF << regs)) | tmp << regs;\n      }\n    }\n  }\n\n  private parity(a: number): number {\n    a ^= a >> 4;\n    a &= 0xF;\n    return (~(0x6996 >> a)) & 1;\n  }\n\n  private add(a: number, b: number, w: boolean): number {\n    this.regs[X86Reg.EFLAGS] &= ARITH_FLAG_CLEAR;\n    return this.adc(a, b, w);\n  }\n\n  private or(a: number, b: number, w: boolean): number {\n    const r = a | b;\n    const m = w ? 0xFFFFFFFF : 0xFF;\n    const n = w ? 0x80000000 : 0x80;\n    this.regs[X86Reg.EFLAGS] &= ARITH_FLAG_CLEAR;\n    this.regs[X86Reg.EFLAGS] |= ((r & n) != 0 ? 1 : 0) << <number> X86Flag.SF;\n    this.regs[X86Reg.EFLAGS] |= ((r & m) == 0 ? 1 : 0) << <number> X86Flag.ZF;\n    this.regs[X86Reg.EFLAGS] |= this.parity(a) << <number> X86Flag.PF;\n    return r;\n  }\n\n  private adc(a: number, b: number, w: boolean): number {\n    const cf = (this.regs[X86Reg.EFLAGS] >> (<number> X86Flag.CF)) & 1;\n    const r = a + b + cf;\n    const m = w ? 0xFFFFFFFF : 0xFF;\n    const n = w ? 0x80000000 : 0x80;\n    this.regs[X86Reg.EFLAGS] &= ARITH_FLAG_CLEAR;\n    this.regs[X86Reg.EFLAGS] |= ((a & n) == (b & n) && (a & n) != (r & n) ? 1 : 0)\n        << <number> X86Flag.OF;\n    this.regs[X86Reg.EFLAGS] |= ((r & n) != 0 ? 1 : 0) << <number> X86Flag.SF;\n    this.regs[X86Reg.EFLAGS] |= ((r & m) == 0 ? 1 : 0) << <number> X86Flag.ZF;\n    this.regs[X86Reg.EFLAGS] |= ((a & 0xF) + (b & 0xF) + cf > 0xF ? 1 : 0)\n        << <number> X86Flag.AF;\n    this.regs[X86Reg.EFLAGS] |= this.parity(a) << <number> X86Flag.PF;\n    this.regs[X86Reg.EFLAGS] |= ((r & m) != (r | 0) ? 1 : 0) << <number> X86Flag.CF;\n    return r & m;\n  }\n\n  private sbb(a: number, b: number, w: boolean): number {\n    this.regs[X86Reg.EFLAGS] ^= 1 << <number> X86Flag.CF;\n    const r = this.adc(a, (w ? 0x100000000 : 0x100) - b, w);\n    this.regs[X86Reg.EFLAGS] ^= 1 << <number> X86Flag.CF;\n    return r;\n  }\n\n  private and(a: number, b: number, w: boolean): number {\n    const r = a & b;\n    const m = w ? 0xFFFFFFFF : 0xFF;\n    const n = w ? 0x80000000 : 0x80;\n    this.regs[X86Reg.EFLAGS] &= ARITH_FLAG_CLEAR;\n    this.regs[X86Reg.EFLAGS] |= ((r & n) != 0 ? 1 : 0) << <number> X86Flag.SF;\n    this.regs[X86Reg.EFLAGS] |= ((r & m) == 0 ? 1 : 0) << <number> X86Flag.ZF;\n    this.regs[X86Reg.EFLAGS] |= this.parity(a) << <number> X86Flag.PF;\n    return r;\n  }\n\n  private sub(a: number, b: number, w: boolean): number {\n    this.regs[X86Reg.EFLAGS] &= ARITH_FLAG_CLEAR;\n    return this.sbb(a, b, w);\n  }\n\n  private xor(a: number, b: number, w: boolean): number {\n    const r = a ^ b;\n    const m = w ? 0xFFFFFFFF : 0xFF;\n    const n = w ? 0x80000000 : 0x80;\n    this.regs[X86Reg.EFLAGS] &= ARITH_FLAG_CLEAR;\n    this.regs[X86Reg.EFLAGS] |= ((r & n) != 0 ? 1 : 0) << <number> X86Flag.SF;\n    this.regs[X86Reg.EFLAGS] |= ((r & m) == 0 ? 1 : 0) << <number> X86Flag.ZF;\n    this.regs[X86Reg.EFLAGS] |= this.parity(a) << <number> X86Flag.PF;\n    return r;\n  }\n\n  private pushpop(a: number, _: number, pop: boolean): number {\n    if (!pop) {\n      this.regs[X86Reg.ESP] -= 4;\n      if ((this.regs[X86Reg.ESP] & 0x3) == 0) {\n        this.mem.writeWord(this.regs[X86Reg.ESP], a);\n      }\n      return a;\n    } else {\n      let value = 0;\n      if ((this.regs[X86Reg.ESP] & 0x3) == 0) {\n        value = this.mem.readWord(this.regs[X86Reg.ESP]);\n      }\n      this.regs[X86Reg.ESP] += 4;\n      return value;\n    }\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/x86.ts"],"sourceRoot":""}